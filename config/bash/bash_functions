#!/bin/sh

youtube() {
  yt-dlp $1
}

# Use IF check to determine if using SEXY_PROMPT or not.
function parse_git_branch {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  echo " ("${ref#refs/heads/}")"
}

# Determine if the repo has stuff that needs to change.
function parse_git_dirty {
  # First if is based on: http://stackoverflow.com/a/2180378
  if git ls-files >& /dev/null;
    then
      [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working tree clean" ]] && echo " *"
  fi
}

cdup() {
  if [[ $# -eq 0 ]]
  then
    cd ..

  else
    for (( c=1; c<=$1; c++ ))
      do
        cd ..
      done
  fi
}

# Check if the user is the root user. Otherwise the user will have to use sudo to call it.
check_root() {
  if [[ "`whoami`" != "root" ]]; then
    echo "You don't have sufficient priviledges to run this script (try sudo.)"
    exit 0
  fi
}

function sqlup() {
	PASS="root"
	mysql -uroot -p"$PASS" $1 < $2
}

#----------------------------------------------------------------
# A much easier way to make many files.
function mfile() {
	touch $2.$1
}

#----------------------------------------------------------------
# Set the title of a terminal window.
function title() {
    echo -ne "\033]0;$1\007";
}

#----------------------------------------------------------------
# Rename a file's extension
function file_ext() {
    file=$1
    new_ext=$2
    new_basename="${file%.*}"
    #newfile "extension: ${file##*.}"
    new_file=${new_basename}.${new_ext}
    mv ${file} ${new_file}
}

#----------------------------------------------------------------
# Create a directory and automagically cd into it.
md () {
    mkdir -p "$@" && cd "$@";
}

function site() {
    cd /var/www/current/sites/$1
}