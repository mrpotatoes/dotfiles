#! /bin/sh

# This core of this functionality was taken from here:
# http://clauswitt.com/319.html

# FUNCTIONS ------------------------------------------------------------------------------
# The hosts functions that I am separating for the time being. I will bring them back into here.
# A simple function to get the manual.
usage() {
  . noargs
}

# Check if the user is the root user. Otherwise the user will have to use sudo to call it.
check_root() {
  if [[ "`whoami`" != "root" ]]; then
    echo "You don't have sufficient priviledges to run this script (try sudo.)"
    exit 1
  else 
    [[ -e $HOST_FILE ]] || { echo "Can't find or access host file."; exit 1; }
  fi
}

####
# Backup the hosts file.
# 
# When adding do the backup and call it something. The backup format is ALWAYS going to be
#    -> etc-hosts-%hh-%dd-%mm-%yyyy.backup
#    If directory is empty create the first backup
#      etc-hosts-first.backup
#    else
#      If the file exists do nothing.
#        If the file does not exist create it
#          after created create the copy of the most current /etc/hosts
hosts_backup() {
  # If the file doesn't exist then create it before doing work on it.
  if [[ ! -e $BACKUP_FILE ]]; 
    then
      cp /etc/hosts $BACKUP_FILE
  fi

  # Do the actual work here.  
  echo "$2 $1"  >> $HOSTS_FILE;
  echo -e "\033[0;32madded\033[0m $1"
}

# Revert host file
remove_entry() {
  sed -ie "\|^$IP $2\$|d" $HOSTS_FILE
  echo -e "\033[0;31mremoved\033[0m $2" 
}

# https://trac.macports.org/wiki/howto/bash-completion
revert_hosts_file() {
  echo "Take a backup of this file and put it into the /etc/hosts file"
  cp "/etc/hosts" "$BACKUP_HOSTS/etc-hosts"
  echo -e "\033[0;31mIf anything is broken feel free to use $BACKUP_HOSTS/etc-hosts to revert back\033[0m" 
  #cat "$2" >> "/etc/hosts"
}

# SOME VARIABLES -------------------------------------------------------------------------
DEFAULT_IP=127.0.0.1
IP=${3:-$DEFAULT_IP}
NOW=$(date +"%H-%d-%m-%Y")

# Files and directories. 
BACKUP_HOSTS="${HOME}/.dotfiles/data/hosts"
BACKUP_FILE="$BACKUP_HOSTS/etc-hosts-$NOW.backup"
HOSTS_FILE="/etc/hosts"

# THE ACTUAL PROGRAM ---------------------------------------------------------------------
case "$1" in
  'ls' | 'list' | 'show' ) 
    awk 'NF == 2 { print $2 }; END { if (!NR) print "Empty" }' "$HOSTS_FILE" | less ;;
    
  add)
    [[ -z $2 ]] && { usage; exit 1; }
    hosts_backup $2 $3;;

  remove)
    [[ -z $2 ]] && { usage; exit 1; }
    remove_entry $2;;
    
  revert)
    [[ -z $2 ]] && { usage; exit 1; }
    revert_hosts_file $2;; 
    
  # List the current backup files in the directory.
  list-backups)
    ls $BACKUP_HOSTS | less;;

  *)
    usage;;
esac
