#!/bin/bash

# Retrieved from here and modified.
# http://codereview.stackexchange.com/questions/10910/bash-script-to-swap-out-edit-host-files
#
# Others to check out.
# https://bbs.archlinux.org/viewtopic.php?id=139784
#
# The intention of this script can be found in the manual.

DOTFILES="${HOME}/.dotfiles"

usage() {
  . noargs
}

# HOST_FILE - actual host file to be swapped around.
# ORIG_FILE - original host file without any of the appended blocked hosts.
# BLCK_FILE - list of blocked hosts.
# BLCK_TEMP - temporary file used when removing hosts.
VARDIR="$DOTFILES/tmp/var"
HOST_FILE="/etc/hosts"
HOST_FILE="$DOTFILES/tmp/hosts"
ORIG_FILE="$VARDIR/original_host"
BLCK_FILE="$VARDIR/blocked_host"
BLCK_TEMP=`mktemp -t "blocked_hosts"` || `mktemp /tmp/blocked_hosts.XXXXXXX` || exit 1

# Make sure files exist.
[[ -e $ORIG_FILE ]] || touch "$ORIG_FILE"
[[ -e $BLCK_FILE ]] || touch "$BLCK_FILE"

# Check to see if the block is currently active.
ACTIVE_FLAG="$HOME/.wrk_block.flag"
if [[ -e $ACTIVE_FLAG ]]; then 
    IS_ACTIVE=0
else 
    IS_ACTIVE=1
fi

add_host() {
  local hosts=("$@")
  for host in "${hosts[@]:1}"; do
    # append host to blocked hosts list
    echo "127.0.0.1 $host" >> "$BLCK_FILE"
    echo -e "\033[0;32madded\033[0m $host" 
  done
}

add_to_host() {
  echo 'Appending to /etc/hosts file';
}

# todo: remove need for loop; do in one go
rm_host() {
    local hosts=("$@")
    for host in "${hosts[@]:1}"; do
        # overwrite host list file with a copy removing a certain host
        awk -v host=$host 'NF==2 && $2!=host { print }' "$BLCK_FILE" > "$BLCK_TEMP"
        mv "$BLCK_TEMP" "$BLCK_FILE"
        echo -e "\033[0;31mremoved\033[0m $host" 
    done
}

# Check if the user is the root user. Otherwise the user will have to use sudo to call it.
check_root() {
  if [[ "`whoami`" != "root" ]]; then
    echo "You don't have sufficient priviledges to run this script (try sudo.)"
    exit 1
  else 
    [[ -e $HOST_FILE ]] || { echo "Can't find or access host file."; exit 1; }
  fi
}

start_block() {
    if [[ $IS_ACTIVE -ne 0 ]]; then
        cp "$HOST_FILE" "$ORIG_FILE"
        cat "$BLCK_FILE" >> "$HOST_FILE"
        touch "$ACTIVE_FLAG"
        echo "Block started."
    else
        echo "Already blocking."
    fi
}

stop_block() {
    if [[ $IS_ACTIVE -eq 0 ]]; then
        cp "$ORIG_FILE" "$HOST_FILE"
        [[ -e $ACTIVE_FLAG ]] && rm "$ACTIVE_FLAG"
        echo "Stopped blocking."
    else
        echo "Not blocking."
    fi
}

# THE ACTUAL PROGRAM ---------------------------------------------------------------------
case $1 in
    'ls' | 'list' | 'show' ) 
        awk 'NF == 2 { print $2 }; END { if (!NR) print "Empty" }' "$BLCK_FILE" | less ;;
    'add') 
        [[ -z $2 ]] && { usage; exit 1; }
        add_host $@;;
    'add-to-etc-hosts') 
        [[ -z $2 ]] && { usage; exit 1; }
        echo 'hey andric';;
        #add_to_host $@;;
    'rm' | 'remove') 
        [[ -z $2 ]] && { usage; exit 1; }
        rm_host $@;;
    'start') 
        check_root
        start_block;;
    'stop') 
        check_root
        stop_block;;
    *)
        . noargs;;
esac

#edit $BLCK_FILE
#edit $DOTFILES/tmp/hosts
